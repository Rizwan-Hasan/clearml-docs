# This is a basic workflow to help you get started with Actions

name: Links

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]
  #schedule:
  #  - cron: "00 18 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  FindingAllFiles:
    runs-on: ubuntu-latest
    env:
      ARTIFACTS_DIR: /tmp/tmp_artifacts_directory/
      MD_FILES_ENV_FILE: /tmp/tmp_artifacts_directory/MD_FILES.env
    steps:
      - uses: actions/checkout@v3

      - name: Creating artifacts directory
        id: create_artifacts_dir
        run: mkdir -pv "$ARTIFACTS_DIR"

      - name: Find all markdown files
        id: find_md_files
        run: echo "$(find . -name '*.md' -type f | sed 's|^./||')" >> "$MD_FILES_ENV_FILE"

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-markdown-files-env-file
          path: ${{ env.MD_FILES_ENV_FILE }}

  LinkChecker:
    runs-on: ubuntu-latest
    needs: [FindingAllFiles]
    env:
      ARTIFACTS_DIR: /tmp/tmp_artifacts_directory/
      MD_FILES_ENV_FILE: /tmp/tmp_artifacts_directory/MD_FILES.env
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: artifacts-markdown-files-env-file
          path: ${{ env.ARTIFACTS_DIR }}

      - name: Putting content of artifacts-markdown-files-env-file into github env
        run: echo "MD_FILES=$(cat ${MD_FILES_ENV_FILE} | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Link Checker
        id: lychee
        # if: ${{ false }}  # disable for now
        uses: lycheeverse/lychee-action@v1.5.1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          # Fail action on broken links
          fail: true
          # Use json as output format (instead of markdown)
          # format: json
          args: ${{ env.MD_FILES }} --max-concurrency 1 --no-progress --verbose

  LinkCheckerExcluded:
    runs-on: ubuntu-latest
    needs: [FindingAllFiles]
    env:
      ARTIFACTS_DIR: /tmp/tmp_artifacts_directory/
      MD_FILES_ENV_FILE: /tmp/tmp_artifacts_directory/MD_FILES.env
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: artifacts-markdown-files-env-file
          path: ${{ env.ARTIFACTS_DIR }}

      - name: Putting content of artifacts-markdown-files-env-file into github env
        run: echo "MD_FILES=$(cat ${MD_FILES_ENV_FILE} | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Creating lychee include file
        run: echo "LYCHEE_INCLUDE_FILE=$(cat .lycheeignore | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Removing .lycheeignore
        run: rm -v .lycheeignore

      - name: Link Checker (Excluded ones only)
        id: lychee-dev
        # if: ${{ false }}  # disable for now
        uses: lycheeverse/lychee-action@v1.5.1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          # Fail action on broken links
          fail: true
          # Use json as output format (instead of markdown)
          # format: json
          args: ${{ env.MD_FILES }} --max-concurrency 1 --no-progress --verbose --include $(cat $LYCHEE_INCLUDE_FILE)

      #- name: Read Results
      #  if: ${{ steps.lychee.outputs.exit_code != 0 }}
      #  run: echo "FAILED_URLS=$(jq -r '.fail_map[] | .[] | .url' ./lychee/out.md)" >> $GITHUB_ENV

      #- name: Slack Notification
      #  if: ${{ steps.lychee.outputs.exit_code != 0 }}
      #  uses: tokorom/action-slack-incoming-webhook@main
      #  env:
      #    INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      #  with:
      #    blocks: |
      #      [
      #        {"type": "section", "text": {"type": "mrkdwn", "text": ":warning: Link Checker failure in github.com/allegroai/clearml-docs "}},
      #        {"type": "section", "text": {"type": "mrkdwn", "text": "$FAILED_URLS"}}
      #      ]